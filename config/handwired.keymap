/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    macros {
        ctrlshiftescape: ctrlshiftescape {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp &kp>;
            label = "CTRLSHIFTESCAPE";
        };
    };
 
behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mt RIGHT_GUI SEMICOLON>, <&kp  LEFT_BRACKET>;
        };
td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mt RIGHT_ALT L>, <&kp  APOSTROPHE>;
        };
td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mkp RCLK>, <&kt KP_NUMLOCK>;
        };
td3: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;
        };
td4: tap_dance_4 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N9>, <&kt KP_NUMLOCK>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |          

            bindings = <
&kp Q           &kp W           &kp E        &kp R             &kp T    &kp Y      &kp U         &kp I        &kp O            &kp P
&mt LEFT_GUI A  &mt LEFT_ALT S  &mt LCTRL D  &mt LEFT_SHIFT F  &kp G    &kp H      &mt LSHIFT J  &mt RCTRL K  &td1  &td0
&kp Z           &kp X           &kp C        &kp V             &kp B    &kp N      &td3       &kp COMMA    &kp DOT          &kp FSLH
                               &mo 1    &kp SPACE                        &mo 2    &kp DEL  &kp RET         &mo 3 
                                         &mkp LCLK    &mkp RCLK                   &kp DEL  &kp RET        


            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp N1        &kp N2  &kp N3        &kp N0                &kp MINUS                &kp EXCLAMATION  &kp AT_SIGN   &kp HASH   &kp N9     &kp BACKSPACE
&kp NUMBER_4  &kp N5  &kp NUMBER_6  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp DOLLAR       &kp PERCENT   &kp CARET  &kp RIGHT  &trans
&kp N7        &kp N8  &kp N9     &mkp LCLK               &td2                 &kp AMPERSAND    &kp ASTERISK  &kp  APOSTROPHE    &kp  LEFT_BRACKET      &kp DEL
                                    &trans  &trans     &trans                &kp BACKSPACE      &trans    &kp RET
                                      &trans      &trans                          &kp DEL  &kp RET 
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE          &trans           &kp UP_ARROW    &bt BT_CLR_ALL           &bt BT_NXT    &kp CARET      &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR
&kp TAB             &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans    &kp MINUS      &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH
&kp LC(LS(ESCAPE))  &kp LC(LS(DEL))  &trans          &kt KP_NUMLOCK              &kt KP_NUMLOCK     &kp UNDER      &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE
                                                     &trans    &trans     &trans  &kp BACKSPACE &trans &kp RET
                                                             &kt KP_NUMLOCK      &trans                       &kp DEL  &kp RET 
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans &trans &trans
            >;
        };
    };
};
